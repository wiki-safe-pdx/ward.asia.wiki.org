{
  "title": "Enabling Activity",
  "story": [
    {
      "type": "paragraph",
      "id": "a8974cae09be1505",
      "text": "We speak of freezing and thawing the activity of plugins that draw information from their surroundings."
    },
    {
      "type": "paragraph",
      "id": "6ef39b34035fa643",
      "text": "We imagine plugins born active and reaching out into their environment up and to the left for sources they understand. Sources supplement. Without sources they carry on as best they can."
    },
    {
      "type": "paragraph",
      "id": "ef8c950f90a04df7",
      "text": "Similarly pages are born of the current state of the federation but make no further effort to reflect changes. Twins reflect the state of a site when first visited but they to do not update."
    },
    {
      "type": "paragraph",
      "id": "ca862d86336ee139",
      "text": "Some pages try harder. Recent Changes's Activity plugin revises the origin's changes as they happen because this case has been wired into incremental update of the origin's sitemap."
    },
    {
      "type": "markdown",
      "id": "86e8c2e2189586e4",
      "text": "# Progress"
    },
    {
      "type": "paragraph",
      "id": "5c909352f1c5facd",
      "text": "Joshua Benuck has revisited the update logic in our core javascript in order to reinitialize plugins when the context from which they draw changes, also a new and popular capability he enabled."
    },
    {
      "type": "paragraph",
      "id": "7dd4501d1d8a5d48",
      "text": "Eric Dobbs has taught the Graphviz plugin to save a static version of algorithmic diagrams that can be frozen by simply deleting the algorithm."
    },
    {
      "type": "paragraph",
      "id": "57919dfe8056a0bd",
      "text": "Paul Rodwell has developed a more general approach to freezing for Map markers by saving them in a json slot reserved for that purpose. A snowflake icon is shown in a corner where the user can express their intentions."
    },
    {
      "type": "markdown",
      "id": "15c6f6f59d2c984f",
      "text": "# Future"
    },
    {
      "type": "paragraph",
      "id": "c006dd83dfadb009",
      "text": "We render fully synthetic pages as transparent ghosts. Examples include search results and older versions of pages reconstructed from history. Active pages are themselves partially synthetic in that the information they show is not directly represented on the server. Perhaps all active pages should appear as guests and freeze when forked."
    },
    {
      "type": "paragraph",
      "id": "b798e753bdaf3f95",
      "text": "We might separate the active behavior of plugins from their static representational form. Imagine an algorithmic diagram as constructed by an \"activator\" plugin which a Graphviz plugin would consult upon initialization. Graphviz might consult only the current page leaving larger scale harvesting to the activator. With no activator, a Graphviz would be static, frozen, until a new activator is provided."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Enabling Activity",
        "story": []
      },
      "date": 1606499555751
    },
    {
      "item": {
        "type": "factory",
        "id": "a8974cae09be1505"
      },
      "id": "a8974cae09be1505",
      "type": "add",
      "date": 1606499557686
    },
    {
      "type": "edit",
      "id": "a8974cae09be1505",
      "item": {
        "type": "paragraph",
        "id": "a8974cae09be1505",
        "text": "We speak of freezing and thawing the activity of plugins that draw information from their surroundings."
      },
      "date": 1606499627637
    },
    {
      "type": "add",
      "id": "6ef39b34035fa643",
      "item": {
        "type": "paragraph",
        "id": "6ef39b34035fa643",
        "text": "We imagine plugins born active and reaching out into their environment up and to the left for sources they understand. Without sources they carry on as best they can."
      },
      "after": "a8974cae09be1505",
      "date": 1606499736043
    },
    {
      "type": "edit",
      "id": "6ef39b34035fa643",
      "item": {
        "type": "paragraph",
        "id": "6ef39b34035fa643",
        "text": "We imagine plugins born active and reaching out into their environment up and to the left for sources they understand. Sources supplement. Without sources they carry on as best they can."
      },
      "date": 1606499751127
    },
    {
      "type": "add",
      "id": "ef8c950f90a04df7",
      "item": {
        "type": "paragraph",
        "id": "ef8c950f90a04df7",
        "text": "Similarly pages are born of the current state of the federation but make no further effort to reflect changes. Twins reflect the state of a site when first visited but they to do not update."
      },
      "after": "6ef39b34035fa643",
      "date": 1606499958622
    },
    {
      "type": "add",
      "id": "ca862d86336ee139",
      "item": {
        "type": "paragraph",
        "id": "ca862d86336ee139",
        "text": "Some pages try harder. Recent Changes's Activity plugin revises the origin's changes as they happen because this case has been wired into incremental update of the origin's sitemap."
      },
      "after": "ef8c950f90a04df7",
      "date": 1606500154356
    },
    {
      "item": {
        "type": "factory",
        "id": "86e8c2e2189586e4"
      },
      "id": "86e8c2e2189586e4",
      "type": "add",
      "after": "ca862d86336ee139",
      "date": 1606500189191
    },
    {
      "type": "edit",
      "id": "86e8c2e2189586e4",
      "item": {
        "type": "markdown",
        "id": "86e8c2e2189586e4",
        "text": "# Progress"
      },
      "date": 1606500199896
    },
    {
      "item": {
        "type": "factory",
        "id": "5c909352f1c5facd"
      },
      "id": "5c909352f1c5facd",
      "type": "add",
      "after": "86e8c2e2189586e4",
      "date": 1606500202712
    },
    {
      "type": "edit",
      "id": "5c909352f1c5facd",
      "item": {
        "type": "paragraph",
        "id": "5c909352f1c5facd",
        "text": "Joshua Benuck has revisited the update logic in our core javascript in order to reinitialize plugins when the context from which they draw changes, also a new and popular capability he enabled."
      },
      "date": 1606500350902
    },
    {
      "type": "add",
      "id": "7dd4501d1d8a5d48",
      "item": {
        "type": "paragraph",
        "id": "7dd4501d1d8a5d48",
        "text": "Eric Dobbs has taught the Graphviz plugin to save a static version of algorithmic diagrams that can be frozen by simply deleting the algorithm."
      },
      "after": "5c909352f1c5facd",
      "date": 1606500449824
    },
    {
      "type": "add",
      "id": "57919dfe8056a0bd",
      "item": {
        "type": "paragraph",
        "id": "57919dfe8056a0bd",
        "text": "Paul Rodwell has developed a more general approach to freezing for Map markers by saving them in a json slot reserved for that purpose. A snowflake icon is shown in a corner where the user can express their intentions."
      },
      "after": "7dd4501d1d8a5d48",
      "date": 1606500619604
    },
    {
      "item": {
        "type": "factory",
        "id": "15c6f6f59d2c984f"
      },
      "id": "15c6f6f59d2c984f",
      "type": "add",
      "after": "57919dfe8056a0bd",
      "date": 1606500742986
    },
    {
      "type": "edit",
      "id": "15c6f6f59d2c984f",
      "item": {
        "type": "markdown",
        "id": "15c6f6f59d2c984f",
        "text": "# Future"
      },
      "date": 1606500758081
    },
    {
      "item": {
        "type": "factory",
        "id": "c006dd83dfadb009"
      },
      "id": "c006dd83dfadb009",
      "type": "add",
      "after": "15c6f6f59d2c984f",
      "date": 1606500777514
    },
    {
      "type": "edit",
      "id": "c006dd83dfadb009",
      "item": {
        "type": "paragraph",
        "id": "c006dd83dfadb009",
        "text": "We render fully synthetic pages as transparent ghosts. Examples include search results and older versions of pages reconstructed from history. Active pages are themselves partially synthetic in that the information they show is not directly represented on the server. Perhaps all active pages should appear as guests and freeze when forked."
      },
      "date": 1606501128780
    },
    {
      "type": "add",
      "id": "b798e753bdaf3f95",
      "item": {
        "type": "paragraph",
        "id": "b798e753bdaf3f95",
        "text": "We might separate the active behavior of plugins from their static representational form. Imagine an algorithmic diagram as constructed by an \"activator\" plugin which a Graphviz plugin would consult upon initialization. Graphviz might consult only the current page leaving larger scale harvesting to the activator."
      },
      "after": "c006dd83dfadb009",
      "date": 1606501751727
    },
    {
      "type": "edit",
      "id": "b798e753bdaf3f95",
      "item": {
        "type": "paragraph",
        "id": "b798e753bdaf3f95",
        "text": "We might separate the active behavior of plugins from their static representational form. Imagine an algorithmic diagram as constructed by an \"activator\" plugin which a Graphviz plugin would consult upon initialization. Graphviz might consult only the current page leaving larger scale harvesting to the activator. With no activator, a Graphviz would be static, frozen, until a new activator is provided."
      },
      "date": 1606501901950
    }
  ]
}